<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>no.mnemonic.messaging</groupId>
  <artifactId>parent</artifactId>
  <packaging>pom</packaging>
  <version>1.2.9</version>

  <name>mnemonic messaging</name>
  <description>Java messaging libraries</description>
  <url>https://github.com/mnemonic-no/messaging</url>
  <inceptionYear>2017</inceptionYear>

  <licenses>
    <license>
      <name>ISC</name>
      <url>https://opensource.org/licenses/ISC</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>mnemonic as</name>
    <url>https://www.mnemonic.no</url>
  </organization>

  <developers>
    <developer>
      <name>mnemonic development team</name>
      <email>opensource@mnemonic.no</email>
      <url>https://github.com/mnemonic-no</url>
      <organization>mnemonic as</organization>
      <organizationUrl>https://www.mnemonic.no</organizationUrl>
      <timezone>Europe/Oslo</timezone>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- mnemonic dependencies -->
    <mnemonic.commons.version>0.2.19</mnemonic.commons.version>

    <!-- external dependencies -->
    <activemq.version>5.15.8</activemq.version>
    <kafka.clients.version>0.10.2.2</kafka.clients.version>
    <jms.version>2.0.1</jms.version>
    <junit.version>4.12</junit.version>
    <mockito.version>2.25.0</mockito.version>
    <xstream.version>1.4.11.1</xstream.version>
    <docker.compose.junit.version>0.35.0</docker.compose.junit.version>

    <!-- build dependencies -->
    <maven.clean.version>3.1.0</maven.clean.version>
    <maven.compile.version>3.8.0</maven.compile.version>
    <maven.deploy.version>2.8.2</maven.deploy.version>
    <maven.gpg.version>1.6</maven.gpg.version>
    <maven.install.version>2.5.2</maven.install.version>
    <maven.jar.version>3.1.1</maven.jar.version>
    <maven.javadoc.version>3.0.1</maven.javadoc.version>
    <maven.license.version>1.18</maven.license.version>
    <maven.nexus.staging.version>1.6.8</maven.nexus.staging.version>
    <maven.release.version>2.5.3</maven.release.version>
    <maven.resources.version>3.1.0</maven.resources.version>
    <maven.source.version>3.0.1</maven.source.version>
    <maven.surefire.version>2.22.1</maven.surefire.version>
    <maven.dependencyCheck.version>4.0.2</maven.dependencyCheck.version>
  </properties>

  <modules>
    <module>requestsink</module>
    <module>requestsink-jms</module>
    <module>documentchannel</module>
    <module>documentchannel-jms</module>
    <module>documentchannel-kafka</module>
  </modules>

  <scm>
    <connection>scm:git:git://github.com/mnemonic-no/messaging.git</connection>
    <developerConnection>scm:git:ssh://github.com:mnemonic-no/messaging.git</developerConnection>
    <url>https://github.com/mnemonic-no/messaging</url>
    <tag>parent-1.2.9</tag>
  </scm>

  <build>
    <resources>
      <!-- Always include license file in generated bundles. -->
      <resource>
        <directory>../</directory>
        <includes>
          <include>LICENSE</include>
        </includes>
      </resource>
      <!-- Include resources from standard resources folder in generated bundles. -->
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compile.version}</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.version}</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven.release.version}</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <resume>false</resume>
          <!-- Don't interact with the remote repository, use release.sh instead. -->
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven.clean.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven.install.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven.deploy.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.version}</version>
        <configuration>
          <show>protected</show>
          <aggregate>true</aggregate>
          <failOnError>false</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${maven.license.version}</version>
        <!-- Execute license check during the build process to detect violations as early as possible. -->
        <executions>
          <execution>
            <id>check-licenses</id>
            <phase>compile</phase>
            <goals>
              <goal>add-third-party</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- Trust that the developers of dependencies have done their homework. -->
          <includeTransitiveDependencies>false</includeTransitiveDependencies>
          <!-- Fail the build if a detected license is not in the white list. -->
          <failIfWarning>true</failIfWarning>
          <!-- Only allow licenses which are in this list. -->
          <includedLicenses>Apache 2|CDDL|Eclipse|ISC|MIT|BSD</includedLicenses>
          <!-- Consolidate license names. -->
          <licenseMerges>
            <licenseMerge>Apache 2|Apache License 2.0|Apache Software License - Version 2.0|Apache License, Version 2.0|The Apache Software License, Version 2.0</licenseMerge>
            <licenseMerge>CDDL|CDDL 1.1|CDDL + GPLv2 with classpath exception</licenseMerge>
            <licenseMerge>BSD|BSD style</licenseMerge>
            <licenseMerge>Eclipse|Eclipse Public License 1.0|Eclipse Public License - Version 1.0</licenseMerge>
            <licenseMerge>MIT|The MIT License</licenseMerge>
          </licenseMerges>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${maven.dependencyCheck.version}</version>
        <executions>
          <execution>
            <id>check-vulnerabilities</id>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- The assembly analyzer is triggered but fails on Linux because it requires mono. Deactivate it because this is Java and not .NET. -->
          <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
          <failBuildOnAnyVulnerability>${failBuildOnAnyVulnerability}</failBuildOnAnyVulnerability>
          <suppressionFiles>
            <suppressionFile>vulnerability-suppression.xml</suppressionFile>
          </suppressionFiles>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- Use this profile to push to internal Artifactory during deploy. -->
      <id>publish-internal</id>
      <distributionManagement>
        <repository>
          <id>mnemonic</id>
          <url>http://artifactory.mnemonic.no/artifactory/mnemonic</url>
        </repository>
        <snapshotRepository>
          <id>mnemonic-snapshots</id>
          <url>http://artifactory.mnemonic.no/artifactory/mnemonic-snapshots</url>
        </snapshotRepository>
      </distributionManagement>
    </profile>
    <profile>
      <!-- Use this profile to push to the central repository (including signing of artifacts). -->
      <id>publish-external</id>
      <distributionManagement>
        <repository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven.gpg.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${maven.nexus.staging.version}</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
